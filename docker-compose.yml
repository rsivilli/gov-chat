version: '3'
services:
  dummychatbot:
    image: nginx:1.21-alpine
    ports:
      - 8080:80
    networks:
      - gov_chat
    command:
      - nginx
      - -g
      - daemon off;
    volumes:
      - ./frontend:/usr/share/nginx/html
  chat_server:
    
    volumes:
      - ./models:/app/models/
      - ./gov_chat:/app/gov_chat
    build: 
        context: .
        dockerfile: deployments/chatserver/Dockerfile
    depends_on:
      - vectorstore
      - database
    environment:
      - DATABASE_HOST=database
      - VECTOR_STORE_HOST=vectorstore
      - WAIT_FOR_SERVICES=database:5432 vectorstore:8000
      - "OPENAI_API_KEY=${OPENAI_API_KEY}"
      - "MODEL_TYPE=${MODEL_TYPE}"
    command: poetry run uvicorn gov_chat.chatbot_server:app --port=8001 --host=0.0.0.0
    ports:
      - 8001:8001
    networks:
      - gov_chat
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
  database:
    image: 'postgres:latest'
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: admin # The PostgreSQL user (useful to connect to the database)
      POSTGRES_PASSWORD: admin # The PostgreSQL password (useful to connect to the database)
      POSTGRES_DB: default_database # The PostgreSQL default database (automatically created at first launch)
    networks:
      - gov_chat
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
  vectorstore:
    image: "ghcr.io/chroma-core/chroma:latest"
    command: uvicorn chromadb.app:app --reload --workers 1 --host 0.0.0.0 --port 8000
    networks:
      - gov_chat
    environment:
      - is_persistent=TRUE
      - persist_directory=/db
      - anonymized_telemetry=FALSE
      - chroma_server_ssl_enabled=TRUE
    ports:
      - 8000:8000
    volumes:
      - index_data:/index_data
      - ./chroma_store:/db
  customer_management:
    restart: always
    tty: true 
    networks:
      - gov_chat
    build: 
      context: .
      dockerfile: deployments/customermanagement/Dockerfile
    command: poetry run python manage.py runserver 0.0.0.0:8000
    ports:
      - 8888:8000
    depends_on:
      - vectorstore
      - database
    environment:
      - DATABASE_HOST=database
      - VECTOR_STORE_HOST=vectorstore
      - WAIT_FOR_SERVICES=database:5432 vectorstore:8000
    volumes:
      - ./customer_management:/app/customer_management
  scan_job:
    networks:
      - gov_chat
    build: 
      context: .
      dockerfile: deployments/webcrawler/Dockerfile
    command: poetry run python gov_chat/webcraler_manager.py
    depends_on:
      - vectorstore
      - database
    environment:
      - DATABASE_HOST=database
      - VECTOR_STORE_HOST=vectorstore
      - WAIT_FOR_SERVICES=database:5432 vectorstore:8000
    volumes:
      - ./outputs:/app/outputs
      - ./customer_management:/app/customer_management
      - ./gov_chat:/app/gov_chat
    
volumes:
  index_data:
    driver: local
  backups:
    driver: local
networks:
  gov_chat:
    attachable: true