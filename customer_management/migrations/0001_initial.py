# Generated by Django 4.2.3 on 2023-08-02 13:08

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='VectorStoreCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_site', models.CharField(max_length=200, unique=True)),
                ('site_map', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('update_site_map', models.BooleanField(default=False)),
                ('create_site_map', models.BooleanField(default=False)),
                ('site_map_last_scanned', models.DateField(blank=True, null=True)),
                ('site_last_indexed', models.DateField(blank=True, null=True)),
                ('site_doc_staging', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer_management.customer')),
                ('target_collections', models.ManyToManyField(to='customer_management.vectorstorecollection')),
            ],
        ),
        migrations.CreateModel(
            name='ChatbotConfig',
            fields=[
                ('model', models.CharField(choices=[('GPT4All-J v1.3-groovy', 'Gpt4All J V1 3 Groovy')], default='GPT4All-J v1.3-groovy', max_length=100)),
                ('temperature', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('limit_time_seconds', models.IntegerField(default=60, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3600)])),
                ('limit_messages_per_time_per_device', models.IntegerField(default=20, validators=[django.core.validators.MinValueValidator(0)])),
                ('not_found_response', models.TextField(default="I'm sorry, I can't find information about your question", max_length=255)),
                ('prompt_template', models.TextField(default='Use the following pieces of context to answer the question at the end. If you don\'t know the answer, just say that you don\'t know, don\'t try to make up an answer. Use three sentences maximum and keep the answer as concise as possible. Always say "thanks for asking!" at the end of the answer.\n{context}\nQuestion: {question}\nHelpful Answer:', max_length=500)),
                ('verbose', models.BooleanField(default=False)),
                ('return_source_documents', models.BooleanField(default=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer_management.customer')),
                ('default_collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customer_management.vectorstorecollection')),
            ],
        ),
    ]
